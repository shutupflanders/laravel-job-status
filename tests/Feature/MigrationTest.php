<?php

namespace JobStatus\Tests\Feature;

use Illuminate\Database\QueryException;
use JobStatus\Models\JobBatch;
use JobStatus\Models\JobException;
use JobStatus\Models\JobMessage;
use JobStatus\Models\JobSignal;
use JobStatus\Models\JobStatus;
use JobStatus\Models\JobStatusStatus;
use JobStatus\Models\JobStatusTag;
use JobStatus\Models\JobStatusUser;
use JobStatus\Tests\TestCase;

class MigrationTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function refreshDatabase()
    {
        // Do nothing, invalidating the Refresh Database trait
    }

    private function assertAllTablesExist(bool $shouldExist = true)
    {
        $this->assertEquals($shouldExist, JobStatus::factory()->create()->exists);
        $this->assertEquals($shouldExist, JobMessage::factory()->create()->exists);
        $this->assertEquals($shouldExist, JobSignal::factory()->create()->exists);
        $this->assertEquals($shouldExist, JobStatusTag::factory()->create()->exists);
        $this->assertEquals($shouldExist, JobStatusStatus::factory()->create()->exists);
        $this->assertEquals($shouldExist, JobException::factory()->create()->exists);
        $this->assertEquals($shouldExist, JobBatch::factory()->create()->exists);
        $this->assertEquals($shouldExist, JobStatusUser::factory()->create()->exists);
    }

    private function assertAllTablesMissing()
    {
        $message = null;

        try {
            $this->assertAllTablesExist(false);
        } catch (QueryException $exception) {
            $message = $exception->getMessage();
        }
        $this->assertStringContainsString('no such table: ', $message);
    }

    /** @test */
    public function it_can_migrate_fresh()
    {
        $this->artisan('migrate:fresh')
            ->assertOk()
            ->run();

        $this->assertAllTablesExist();
    }

    /** @test */
    public function it_can_rollback()
    {
        $this->artisan('migrate')
            ->assertOk()
            ->run();

        $this->assertAllTablesExist();

        $this->artisan('migrate:rollback')
            ->assertOk()
            ->run();

        $this->assertAllTablesMissing();

        $this->artisan('migrate')
            ->assertOk()
            ->run();

        $this->assertAllTablesExist();
    }
}
